apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ch4k4uw.oauthdddlogin"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debugTest {
            initWith debug
        }
    }
}

dependencies {
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0-alpha01'
    implementation "io.reactivex.rxjava2:rxkotlin:$versions.rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    implementation 'com.facebook.fresco:fresco:1.11.0'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation 'org.robolectric:robolectric:4.0.1'
    testImplementation "com.google.dagger:dagger:$versions.dagger"
    testImplementation 'androidx.test:core:1.0.0'
    testImplementation 'androidx.test:monitor:1.1.0'

    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    implementation project(':scope')
    implementation project(':crosscutting')
    implementation project(':abstraction')
    implementation project(':application')
}
